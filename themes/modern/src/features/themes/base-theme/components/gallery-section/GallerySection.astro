---
import Container from '@/features/themes/base-theme/components/container/Container.astro';
import GallerySectionHeader from '@/features/themes/base-theme/components/gallery-section/GallerySectionHeader.astro';
import GallerySectionItem from '@/features/themes/base-theme/components/gallery-section/GallerySectionItem.astro';

import type { GallerySection as GallerySectionType } from '@/features/themes/base-theme/types/gallery';

interface Props {
  section: GallerySectionType;
  sectionIndex: number;
  mediaBaseUrl?: string;
}

const { section, sectionIndex, mediaBaseUrl } = Astro.props;

const validImages = section.images.filter(
  (image) => image.width > 0 && image.height > 0 && image.thumbnail?.width > 0 && image.thumbnail?.height > 0,
);
---

<section class={`gallery-section gallery-section-${sectionIndex}`}>
  <Container>
    <GallerySectionHeader section={section} />
    <div class="gallery-section__gallery" id={`gallery-${sectionIndex}`}>
      {validImages.map((image) => <GallerySectionItem image={image} mediaBaseUrl={mediaBaseUrl} blurHash={image.thumbnail?.blurHash} />)}
    </div>
  </Container>
</section>

<style>
  .gallery-section {
    padding: 1rem 1rem;
  }

  .gallery-section:nth-child(even) {
    background-color: #f9fafb;
  }

  .gallery-section__container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .gallery-section__gallery {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 1rem;
  }

  .gallery-section__gallery::after {
    --w: 2;
    --h: 1;
    --ratio: calc(var(--w) / var(--h));
    content: '';
    flex-basis: calc(var(--ratio) * var(--row-height));
    flex-grow: 1000000;
  }
</style>
